{
  "uid" : "d64c9a010d0ae267",
  "name" : "test_in_theaters[验证响应结果中的totalNum是4]",
  "fullName" : "tests.test_in_theaters.TestInTheaters#test_in_theaters",
  "historyId" : "ae059efb7721d876ad23600f6c0d4f24",
  "time" : {
    "start" : 1604742522138,
    "stop" : 1604742522395,
    "duration" : 257
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 3 == 4\n  -3\n  +4",
  "statusTrace" : "self = <tests.test_in_theaters.TestInTheaters object at 0x0000020A80D09908>, env = {'host': {'pre': 'http://pre.feiyuanenv.com:8830'}}\ncase = '验证响应结果中的totalNum是4'\nhttp = {'headers': {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko)Chro...20, 11, 3), 'pageNum': 1, 'pageSize': 10, 'rankWay': 2, ...}, 'path': '/user/api/v2/company/warn/government/warnCount'}\nexpected = {'response': {'body': {'totalNum': 4}}}\n\n    @pytest.mark.parametrize(\"case,http,expected\", list(list_params), ids=cases)\n    def test_in_theaters(self, env, case, http, expected):\n        r = requests.request(http[\"method\"],\n                             url=env[\"host\"][\"pre\"] + http[\"path\"],\n                             headers=http[\"headers\"],\n                             params=http[\"params\"])\n        response = r.json()\n>       assert response[\"body\"][\"totalNum\"] == expected['response'][\"body\"][\"totalNum\"]\nE       assert 3 == 4\nE         -3\nE         +4\n\ntests\\test_in_theaters.py:17: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "env",
    "time" : {
      "start" : 1604742521839,
      "stop" : 1604742521840,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_in_theaters"
  }, {
    "name" : "subSuite",
    "value" : "TestInTheaters"
  }, {
    "name" : "host",
    "value" : "DESKTOP-NMGN8K9"
  }, {
    "name" : "thread",
    "value" : "25532-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_in_theaters"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "'验证响应结果中的totalNum是4'"
  }, {
    "name" : "expected",
    "value" : "{'response': {'body': {'totalNum': 4}}}"
  }, {
    "name" : "http",
    "value" : "{'method': 'GET', 'path': '/user/api/v2/company/warn/government/warnCount', 'headers': {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/80.0.3987.149 Safari/537.36\"', 'token': 'fd48d11369f9ef844779b15eb380f37b66d6e4aa3fe55657c7bef3643cc9f4e9'}, 'params': {'userId': 324699434648735745, 'startDate\"': datetime.date(2020, 11, 2), 'endDate\"': datetime.date(2020, 11, 3), 'pageNum': 1, 'pageSize': 10, 'rankWay': 2}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "597786d7a3e1f128",
      "status" : "passed",
      "time" : {
        "start" : 1604742503117,
        "stop" : 1604742503359,
        "duration" : 242
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d64c9a010d0ae267.json",
  "parameterValues" : [ "'验证响应结果中的totalNum是4'", "{'response': {'body': {'totalNum': 4}}}", "{'method': 'GET', 'path': '/user/api/v2/company/warn/government/warnCount', 'headers': {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/80.0.3987.149 Safari/537.36\"', 'token': 'fd48d11369f9ef844779b15eb380f37b66d6e4aa3fe55657c7bef3643cc9f4e9'}, 'params': {'userId': 324699434648735745, 'startDate\"': datetime.date(2020, 11, 2), 'endDate\"': datetime.date(2020, 11, 3), 'pageNum': 1, 'pageSize': 10, 'rankWay': 2}}" ]
}